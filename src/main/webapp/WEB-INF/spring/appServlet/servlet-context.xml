<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">



	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven enable-matrix-variables="true" validator="validator"/> <!-- LocalValidatorFactoryBean 빈 객체의 id 이름을 이용한다. -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan base-package="kr.co.chunjae" />

	<!-- File Upload -->
	<beans:bean id="multipartResolver"
				class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10240000" />  <!-- 업로드할 수 있는 파일의 최대 크기-->
	</beans:bean>

<!--	<beans:bean id="uploadDirResource"
				class="org.springframework.core.io.FileSystemResource">
		<beans:constructor-arg value="c:/upload/" />
	</beans:bean>-->


	<!-- 인터셉터 등록 -->
	<interceptors>
		<beans:bean class="kr.co.chunjae.interceptor.MonitoringInterceptor" />
		<beans:bean class="kr.co.chunjae.interceptor.AuditingInterceptor" />
		<!-- 로케일 변경 -->
		<beans:bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<!-- 로케일을 설정할 때 사용할 요청 매개변수 이름 -->
			<beans:property name="paramName" value="language"/>
		</beans:bean>
	</interceptors>
	<!-- 세션에 로케일 정보를 저장 -->
	<beans:bean id="localeResolver"
				class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<!-- 로케일을 설정할 때 사용할 기본 로케일 : 한국어 -->
		<beans:property name="defaultLocale" value="ko"/>
	</beans:bean>

	<resources mapping="/upload/**" location="file:///C:/upload/" />

	<!-- MessageSource -->
	<beans:bean id="messageSource"
				class="org.springframework.context.support.ResourceBundleMessageSource">  <!-- 클래스 등록 -->
		<beans:property name="basename" value="messages"/>  <!-- 메시지 리소스 파일명 -->
		<beans:property name="defaultEncoding" value="UTF-8"/>  <!-- 한글 출력 -->
	</beans:bean>

	<!-- Validator -->
	<!-- JSR-380 유효성 검사를 위해 LocalValidatorFactoryBean 클래스를 빈으로 등록한다. -->
	<beans:bean id="validator"
				class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<beans:property name="validationMessageSource" ref="messageSource"/>
	</beans:bean>

	<!-- Validator 인터페이스의 구현체인 UnitsInStockValidator 빈 객체를 등록해 오류 메시지를 전달받는다. -->
	<beans:bean id="unitsInStockValidator"
				class="kr.co.chunjae.validator.UnitsInStockValidator"/>
	<!-- BookValidator 빈 객체 등록 => JSR-380과 Validator 인터페이스를 서로 연동 -->
	<beans:bean id="bookValidator" class="kr.co.chunjae.validator.BookValidator">
		<beans:property name="springValidators">
			<beans:set>
				<beans:ref bean="unitsInStockValidator"/>
			</beans:set>
		</beans:property>
	</beans:bean>
</beans:beans>
